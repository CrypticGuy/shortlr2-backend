{{!< center-container }} <div class="row">
  <div class="col"></div>
  <div class="col-lg-6 col-md-8 col-sm-10">
    <h1 class="display-4">Create new shortlink</h1>
    <p class="text-black-50">
      Create a tiny new link. Grab eyeballs!
    </p>
    <form class="form-group" action="/urls" method="post">
      <!-- TODO: Add validation -->
      {{> error-snippet}}

      <div class="form-group">
        <label class="ml-2" for="longUrl">URL to shorten</label>
        <input type="url" class="form-control" id="longUrl" name="longUrl" required aria-required="true"
               aria-describedby="longUrlHelp" placeholder="eg. https://codingblocks.com/classroom-courses">
        <small id="longUrlHelp" class="form-text text-muted">We shorten only http and https links</small>
      </div>

      <div class="form-group">
        <button class="btn btn-info" type="button" data-toggle="collapse" data-target="#campaignDetails" aria-expanded="false" aria-controls="collapseExample">
          Show campaign Options
        </button>
      </div>

      <div class="form-group collapse ml-2" id="campaignDetails">
        <label class="ml-2" for="utm_source">Campaign Source </label>
        <input type="text" class="form-control" id="utm_source"  
               aria-describedby="utm_source_help" placeholder="eg. https://codingblocks.com/classroom-courses">
        <small id="utm_source_help" class="form-text text-muted">The referrer: (e.g. google, newsletter)</small>

        <label class="ml-2" for="utm_medium">Campaign Medium</label>
        <input type="text" class="form-control" id="utm_medium"  
               aria-describedby="utm_medium_help" placeholder="eg. https://codingblocks.com/classroom-courses">
        <small id="utm_medium_help" class="form-text text-muted">Marketing medium: (e.g. cpc, banner, email)</small>

        <label class="ml-2" for="utm_name">Campaign Name</label>
        <input type="text" class="form-control" id="utm_name"  
               aria-describedby="utm_name_help" placeholder="eg. https://codingblocks.com/classroom-courses">
        <small id="utm_name_help" class="form-text text-muted">Product, promo code, or slogan (e.g. spring_sale)</small>
      </div>

      {{#ifcontains "admin,employee,intern" user.role}}
      <div class="form-group">
        <label class="ml-2" for="shortCode">ShortCode (optional)</label>
        <div class="input-group">
          <div class="input-group-prepend">
            <span class="input-group-text">cb.lk/</span>
          </div>
          <input type="text" class="form-control" name="shortCode" id="shortCode" aria-describedby="shortCodeHelo"
                 placeholder="mylink">
        </div>
        <small id="shortCodeHelo" class="form-text text-muted">
          Leave empty to get random code
          <br>
          Either single word https://cb.lk/mylink or group like
          https://cb.lk/group/mylink
          Shortcode has to be less than 9 characters
        </small>
      </div>
      {{#ifcontains "admin,employee" user.role}}
      <div class="form-group">
        <div class="custom-control custom-checkbox">
          <input type="checkbox" name="private" class="custom-control-input" id="checkPrivate">
          <label class="custom-control-label" for="checkPrivate">
            Make this a private link
            <small class="form-text text-muted">
              Private links can only be visited by logged in users
            </small>
          </label>
        </div>
      </div>
      {{/ifcontains}}
      {{/ifcontains}}
      <div class="row px-2">
        <button class="btn btn-dark col-3" type="reset">Reset ⓧ </button>
        <div class="col"></div>
        <button class="btn btn-primary col-8" type="submit">Create →</button>
      </div>
    </form>
  </div>
  <div class="col"></div>
</div>

<script>
  function removeEmpty(obj){
    Object.keys(obj).forEach((key) => (obj[key] === "") && delete obj[key]);
    return obj
  }

  function addParam(urlString, newParams) {
    const url = new URL(urlString)
    let updatedParams
    if (url.search !== ""){
      const search = url.search.substring(1)
      const currentParams = JSON.parse('{"' + search.replace(/&/g, '","').replace(/=/g,'":"') + '"}', function(key, value) { return key===""?value:decodeURIComponent(value) });
      updatedParams = {...currentParams, ...newParams}
    } else {
      updatedParams = newParams
    }
    updatedParams = removeEmpty(updatedParams)
    url.search = $.param(updatedParams)
    return url.href
  }

  const longUrl = $("#longUrl")[0]
  const source = $("#utm_source")
  source.on('blur', () => {
    longUrl.value = addParam(longUrl.value, {utm_source: source[0].value})
  })
  const medium = $("#utm_medium")
  medium.on('blur', () => {
    longUrl.value = addParam(longUrl.value, {utm_medium: medium[0].value})
  })
  const name = $("#utm_name")
  name.on('blur', () => {
    longUrl.value = addParam(longUrl.value, {utm_name: name[0].value})
  })
</script>
